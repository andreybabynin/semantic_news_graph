version: "3.9"
services:
  postgres:
    container_name: postgres_container_v2
    image: postgres:13.3
    environment:
      POSTGRES_DB: "news_db"
      POSTGRES_USER: "asdf"
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
    ports:
      - "5432:5432"
    networks:
      - pg_network
    secrets:
      - pg_password
    volumes:
      - db_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 3G
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  telegram_grabber:
    container_name: telegram_grabber_v1
    image: python:3.10-slim
    command: sh -c "python -m pip install -r ./app/requirements.txt && python ./app/parser/parser.py"
    environment:
      POSTGRES_DB: "news_db"
      POSTGRES_USER: "asdf"
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
      TELEGRAM_SECRETS_FILE: /run/secrets/telegram_secrets
    networks:
      - pg_network
    secrets:
      - telegram_secrets
      - pg_password
    volumes:
      - ./:/app
    expose:
      - 8080
    # restart: unless-stopped

  ml_pipelines:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/ml_pipelines/Dockerfile
    container_name: ml_pipelines_v1
    networks:
      - pg_network
    environment:
      POSTGRES_DB: "news_db"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "user2"
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password_ml
    secrets:
      - pg_password_ml
    command: sh -c "python /code/src/models/summarization_pipeline.py && sleep 1h"
    depends_on:
      - postgres

secrets:
  pg_password:
    file: pg_password.txt
  pg_password_ml:
    file: pg_password_ml.txt
  telegram_secrets:
    file: telegram_secrets.json

volumes:
  db_data:
    external: true
    name: d_test_db_data

networks:
  pg_network:
    driver: bridge
